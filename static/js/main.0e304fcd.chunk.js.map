{"version":3,"sources":["Input.js","Output.js","App.js","index.js"],"names":["Input","handleInput","handleFormSubmit","cityName","id","onSubmit","placeholder","onChange","value","type","Output","data","tempMax","tempMin","pressure","humidity","windSpeed","countryCode","App","useState","error","setError","weather","setWeather","e","string","target","length","substring","toUpperCase","preventDefault","city","API","fetch","then","response","ok","Error","json","sys","temp","main","wind","speed","temp_min","temp_max","country","catch","err","ReactDom","render","document","querySelector"],"mappings":"qJAmBeA,G,KAhBD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SAE5C,OACI,oCACI,0BAAMC,GAAG,OAAOC,SAAUH,GACtB,2BACIE,GAAG,SACHE,YAAY,kBACZC,SAAUN,EACVO,MAAOL,IAEX,4BAAQM,KAAK,SAASL,GAAG,cAAzB,iBCGDM,EAfA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACI,oCACI,2CAAiBA,EAAKR,UACtB,6BACA,oDAA0BQ,EAAKC,QAA/B,UACA,oDAA0BD,EAAKE,QAA/B,UACA,yCAAeF,EAAKG,SAApB,QACA,yCAAeH,EAAKI,SAApB,MACA,2CAAiBJ,EAAKK,UAAtB,QACA,6CAAmBL,EAAKM,eCyCrBC,EAjDH,WAAO,IAAD,EACUC,oBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,CAAEhB,SAAU,KAFnC,mBAETmB,EAFS,KAEAC,EAFA,KAmChB,OACE,oCACE,kBAAC,EAAD,CACEtB,YAlCc,SAACuB,GACnB,IAAIC,EAASD,EAAEE,OAAOlB,MACA,IAAlBiB,EAAOE,SACTF,EAASA,EAAOG,UAAU,EAAG,GAAGC,cAAgBJ,EAAOG,UAAU,EAAGH,EAAOE,SAC7EJ,EAAW,CAAEpB,SAAUsB,IACvBJ,GAAS,IA8BLnB,iBA5BmB,SAACsB,GACxBA,EAAEM,iBACF,IAAMC,EAAOT,EAAQnB,SAEf6B,EAAG,2DAAuDD,EAAvD,+BADG,oCAEZE,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EACxB,MAAME,MAAM,qBAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAvB,GAAI,OAAIY,EAAW,CACvBpB,SAAUmB,EAAQnB,SAClBC,GAAIO,EAAK4B,IAAInC,GACboC,KAAM7B,EAAK8B,KAAKD,KAChBzB,SAAUJ,EAAK8B,KAAK1B,SACpBC,UAAWL,EAAK+B,KAAKC,MACrB7B,SAAUH,EAAK8B,KAAK3B,SACpBD,QAASF,EAAK8B,KAAKG,SACnBhC,QAASD,EAAK8B,KAAKI,SACnB5B,YAAaN,EAAK4B,IAAIO,aAEvBC,OAAM,SAAAC,GAAG,OAAI3B,GAAS,OAOrBlB,SAAUmB,EAAQnB,WAEnBmB,EAAQlB,KAAOgB,EAAQ,kBAAC,EAAD,CAAQT,KAAMW,IAAc,KACnDF,EAAQ,qCAAWE,EAAQnB,SAAnB,eAA+C,OC3C9D8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.0e304fcd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Inputs.css';\r\n\r\nconst Input = ({ handleInput, handleFormSubmit, cityName }) => {\r\n\r\n    return (\r\n        <>\r\n            <form id='form' onSubmit={handleFormSubmit}>\r\n                <input\r\n                    id='search'\r\n                    placeholder='tap the city...'\r\n                    onChange={handleInput}\r\n                    value={cityName}\r\n                ></input>\r\n                <button type='submit' id='submit-but'>Search...</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Input;","import React from 'react';\r\n\r\nconst Output = ({ data }) => {\r\n    return (\r\n        <>\r\n            <h2>Weather for {data.cityName}</h2>\r\n            <hr />\r\n            <h3>Maximum temperature: {data.tempMax} °C</h3>\r\n            <h3>Minimum temperature: {data.tempMin} °C</h3>\r\n            <h3>Pressure: {data.pressure} hPa</h3>\r\n            <h3>Humidity: {data.humidity} %</h3>\r\n            <h3>Wind speed: {data.windSpeed} m/s</h3>\r\n            <h3>Country code: {data.countryCode}</h3>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Output;\r\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport Output from './Output';\n\nconst App = () => {\n  const [error, setError] = useState(false);\n  const [weather, setWeather] = useState({ cityName: '' });\n\n  const handleInput = (e) => {\n    let string = e.target.value;\n    if (string.length === 1)\n      string = string.substring(0, 1).toUpperCase() + string.substring(1, string.length);\n    setWeather({ cityName: string });\n    setError(false);\n  }\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const city = weather.cityName;\n    const key = 'f5675df61ef6b86d487daac3ee708b40';\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${key}`;\n    fetch(API)\n      .then(response => {\n        if (response.ok) return response;\n        throw Error('Errors occurs!')\n      })\n      .then(response => response.json())\n      .then(data => setWeather({\n        cityName: weather.cityName,\n        id: data.sys.id,\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        windSpeed: data.wind.speed,\n        pressure: data.main.pressure,\n        tempMin: data.main.temp_min,\n        tempMax: data.main.temp_max,\n        countryCode: data.sys.country\n      }))\n      .catch(err => setError(true))\n  }\n  return (\n    <>\n      <Input\n        handleInput={handleInput}\n        handleFormSubmit={handleFormSubmit}\n        cityName={weather.cityName}\n      />\n      {weather.id && !error ? <Output data={weather} /> : null}\n      {error ? <h3>City \"{weather.cityName}\" not found</h3> : null}\n\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}